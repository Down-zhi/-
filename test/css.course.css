/* 内联样式 > id 选择器 > 类选择器 = 伪类选择器 = 属性选择器 > 标签选择器 = 伪元素选择器*/
.mix {
    border-style: dashed dotted solid double;
    border: width 1px;
    ;
}

/* 顺时针 分别显示边框的上右下左*/
p.mix {
    border-style: hidden;
}

table {
    color: blue;
    border-style: double;
    border-width: thick;
    /*b-width 要在b-style属性使用后菜鸟使用*/
    border-color: brown;
}

/*可以单独定义边框的上下左右的样式颜色宽度 top lift  right border-bottom-color */
td {
    color: aquamarine;
    border: 1px double palegreen;
    /*是border的width style color*/
}

.outline {
    outline: double red thick;
    border: 1px solid black;
    width: fit-content;
    margin: 5px;
    font-style: italic;
}

/*margin是外边距  与轮廓属性不冲突 在outline之外。*/
.padding {
    padding: 50px 50px;
    background-color: antiquewhite;
    width: fit-content;
}

/*p{ }: 为所有 p 元素指定一个样式。
.marked{ }: 为所有 class="marked" 的元素指定一个样式。
.marked p{ }: 为所有 class="marked" 元素内的 p 元素指定一个样式。
p.marked{ }: 为所有 class="marked" 的 p 元素指定一个样式。*/
p {
    font-size: large;
}

.marked {
    color: blue;
}

.marked p {
    color: red;
}

p.marked {
    background-color: antiquewhite;
}

div.a:visited {
    color: green;
    background-color: rgb(206, 16, 16);
    display: block;
    padding: 4px;
}

div.a:hover {
    color: blue;
    text-decoration: underline;
    font-size: 150%;
    background-color: blanchedalmond;
    font-family: Georgia;
    font-style: italic;
}

div.a:active {
    color: red;
}

div.fixed {
    /*元素的位置相对于浏览器窗口是固定位置。
    即使窗口是滚动的它也不会移动：*/
    position: fixed;
    top: 30px;
    right: 10px;
}

h3.pos_left {
    /*pos_left表示图例组件离容器左侧的距离。*/
    position: relative;
    left: -20px;
}

h3.pos_right {
    position: relative;
    left: 20px;
}

div.sticky {

    position: sticky;
    background-color: aqua;
    top: 0;
    width: fit-content;
    border: 2px solid green;
    z-index: 1;
}

div img {
    z-index: -1;
    position: absolute;
    top: 15px;
    left: 15px;
}

/* z-index:-1 表示他在图层的下面  */

div.overflow {
    overflow: auto;
    width: 100px;
    height: 100px;
    background-color: aquamarine;
    position: relative;
    right: -20px;
    cursor: wait;
}

div.float {
    float: left;
    width: 100px;
    height: 90px;
    margin: 5px;
}

div.footer {
    color: aliceblue;
    background-color: black;
    float: right;
    padding: 15px;
}

/* 设置内容水平和垂直都居中  垂直居中用padding 水平可以直接text-algin=content
另外一种方法是让上下左右的padding设置成一样的值再让width随内容适应*/
.content {
    padding: 70px 0;
    border: 3px solid green;
    text-align: center;
}

/*div a{
    color：blue；
} 表示a是div的后代选择器  
只要是在div中就可以有效果
而 dia>a{
       color：blue；
}表示为div紧挨着的a标签可以使用
div~p {} 表示的是div后的所有p标签都可以使用
*/
/* p:first-child {}表示所有标签的第一个p标签可以使用
   p>a:first-child{} 表示所有p元素的第一个a元素*/
dd:first-line {
    color: yellowgreen;
    font-variant: small-caps;
    /*小一点的大写字母*/

}

span:first-letter {
    color: #ff0000;
    font-size: xx-large;
}

span:before {
    content: url(./images/backtop.png);
}

p:lang(a) {
    color: #ff0000;
    /*这样就可以很好的运用p元素 lang值是一个单词 不能设置成数字*/
    font-variant-east-asian: full-width;
    width: fit-content;
    background-color: antiquewhite;
}

.nav {
    list-style-type: none;
    margin: 0%;
    padding: 0;
    background-color: rgb(240, 236, 232);
    /*list-style-type:none - 移除列表前小标志。一个导航栏并不需要列表标记
移除浏览器的默认设置将边距和填充设置为0
上面的例子中的代码是垂直和水平导航栏使用的标准代码。*/
    width: 25%;   /*设置导航栏为1/4宽*/
    border: 1px solid;
    position: relative; /*fixed位置固定 用top left多少代表绝对位置在哪*/
    overflow: auto;

}

li a {
    display: block;
    font-weight: lighter;
   
    padding: 8px 16px;
    /*上下填充和左右比例1：2 美观*/
    text-decoration-line: underline;
    color: black;
    text-align: center;
    border: 1px solid;
    /*只设置li有边框 ur没有边框不行*/

}
li{
    border-bottom: 1px solid;
}
li:last-child {
    border-bottom: none;
}

/*display:block - 显示块元素的链接，让不换行的内联元素换行，让整体变为可点击链接区域（不只是文本），它允许我们指定宽度
width:60px - 块元素默认情况下是最大宽度。我们要指定一个60像素的宽度 */
li a:hover:not(.active){/*表示class=active的元素在鼠标移动到该位置时不会变化not .active*/
    background-color:  #555;
    color: white;
}

/*鼠标移动上面修改背景颜色*/
.active {
    background-color: #4CAF50;
    color: white;
}


/* 下拉按钮样式 */
.dropbtn {
    background-color: #4CAF50;
    color: white;
    padding: 16px;
    font-size: 16px;
    border: none;
    cursor: pointer;
}

/* 容器 <div> - 需要定位下拉内容 */
.dropdown {
    position: relative;
    display: inline-block;
}

/* 下拉内容 (默认隐藏) */
.dropdown-content {
    display: none;
    position: absolute;
    background-color: #f9f9f9;
    min-width: 160px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
}

/* 下拉菜单的链接 */
.dropdown-content a {
    color: black;
    padding: 12px 16px;
    text-decoration: none;
    display: block;
}

/* 鼠标移上去后修改下拉菜单链接颜色 */
.dropdown-content a:hover {background-color: #f1f1f1}

/* 在鼠标移上去后显示下拉菜单 */
.dropdown:hover .dropdown-content {
    display: block;
}

/* 当下拉内容显示后修改下拉按钮的背景颜色 */
.dropdown:hover .dropbtn {
    background-color: #3e8e41;
}

.tooltip {
    position: relative;
    display: inline-block;
    border-bottom: 1px dotted black;
}
 .tooltiptext {
    visibility: hidden;
    width: 120px;
    background-color: black;
    color: #fff;
    text-align: center;
    border-radius: 6px;
    padding: 5px 0;

    /* 定位 */
    position: absolute;
    z-index: 1;
}

.tooltip:hover .tooltiptext {
    visibility: visible;
}

/*transition: property duration timing-function delay;

值	                       描述
transition-property	指定CSS属性的name，transition效果   比如width
transition-duration	transition效果需要指定多少秒或毫秒才能完成
transition-timing-function	指定transition效果的转速曲线
transition-delay	定义transition效果开始的时候*/